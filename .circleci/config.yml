version: 2.1
orbs:
  aws-eks: circleci/aws-eks@0.2.3
  k8s: circleci/kubernetes@0.7.0
  aws-ecr: circleci/aws-ecr@0.0.4
  aws-cli: circleci/aws-cli@2.0.3

jobs:
  build_test:
    docker:
      - image: python:3.7.3-stretch

    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make install
            # Install hadolint
            wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v2.7.0/hadolint-Linux-x86_64 &&\
            chmod +x /bin/hadolint
      - save_cache:
          paths:  
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: run lint
          command: |
            . venv/bin/activate
            make lint

  docker_hub_build_push_image:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: false
      - run:
          name: Build and push Docker image to Docker Hub
          command: |
            echo 'export TAG=latest' >> ${BASH_ENV}
            echo 'export IMAGE_NAME=${CIRCLE_PROJECT_REPONAME}' >> ${BASH_ENV}
            source ${BASH_ENV}
            docker build -t ${DOCKER_LOGIN}/${IMAGE_NAME} -t ${DOCKER_LOGIN}/${IMAGE_NAME}:${TAG} .
            echo ${DOCKER_PWD} | docker login -u ${DOCKER_LOGIN} --password-stdin
            docker push ${DOCKER_LOGIN}/${IMAGE_NAME}


  deploy-container-to-eks:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - aws-cli/setup
      - k8s/install-kubectl
      - run:
          name: Install ekstcl
          command: |
            curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
            sudo mv /tmp/eksctl /usr/local/bin
            eksctl version
            aws --version
            kubectl version --short --client
            
      - run:
          name: Deploy To eks-cluster
          command: |
            aws eks --region us-east-2 update-kubeconfig --name devops-capstone
            kubectl apply -f k8s/loadbalancer.yaml
            kubectl apply -f k8s/deployment.yaml
      
  test-cluster:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
    steps:
      - k8s/install-kubectl
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
      - run:
          command: |
            kubectl get svc
            kubectl get nodes
            kubectl get deployment
            kubectl get pod
          name: devops-capstone

workflows:
  build_test_deploy:
    jobs:
      - build_test
      - docker_hub_build_push_image:
          requires:
            - build_test
      - aws-ecr/build_and_push_image:
          region: us-east-2
          account-url: ${AWS_ECR_ACCOUNT_URL}
          repo: ${CIRCLE_PROJECT_REPONAME}
          tag: latest
          requires:
            - build_test

      - deploy-container-to-eks
          requires:
              - aws-ecr/build_and_push_image
      - test-cluster